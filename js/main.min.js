$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".favourite-btn").click(function () {
    $(this).toggleClass("_added")
})

$(".cart-btn").click(function () {
    $(this).toggleClass("_added")
})

$(".catalog-btn").click(function () {
    $(".header").toggleClass("_open-catalog")
})

$("._hide-city-ask").click(function () {
    $(".city-ask").toggleClass("_open")
})

$(".search-categories__show").click(function () {
    $(".search-categories").toggleClass("_open")
})

$(".search-categories__clear").click(function () {
    $(".search-categories").removeClass("_selected")
    $(".search-categories__selected .search-categories__current").html("")
    $(".search-categories .shops-categories__item").removeClass("_active")
    $("._search-field").attr("placeholder","Найти")
})

$(document).mouseup( function(e){
    let div = $( ".search-categories" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

$(".search-categories .shops-categories__item").click(function () {
    let value = $(this).attr("data-value")
    $("._search-field").attr("placeholder","Найти в категории")
    $(".search-categories__selected .search-categories__current").html(value)
    $(".search-categories .shops-categories__item").removeClass("_active")
    $(this).addClass("_active")
    $(".search-categories").addClass("_selected")
    $(".search-categories").removeClass("_open")
})

$(".header-search__clear").click(function () {
    $("._search-field").val("")
    $(".header-search").removeClass("_open-results")
})

$("._search-field").on("input",function () {
    if($(this).val().length > 0){
        $(".header-search").addClass("_open-results")
    } else{
        $(".header-search").removeClass("_open-results")
    }
})

$(document).mouseup( function(e){
    let div = $( ".header-search" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open-results")){
            $(div).removeClass("_open-results")
        }
    }
});

$(window).scroll(function(){
    setFixHeader()
});
$(window).resize(function(){
    setFixHeader()
    document.documentElement.style.setProperty('--headerHeight', `${getHeaderHeight()}px`);
});

document.documentElement.style.setProperty('--headerHeight', `${getHeaderHeight()}px`);

setFixHeader()


function setFixHeader() {
    let headerHeight = getHeaderHeight()
    let st = $(this).scrollTop();
    if(st > headerHeight * 0.5){
        $(".header").addClass("_fix")
    } else{
        $(".header").removeClass("_fix")
    }
}

function getHeaderHeight() {
    let header = document.querySelector(".header")
    if(!header){
        return
    }
    return header.getBoundingClientRect().height
}

$(".menu-item__show").click(function () {
    $(".menu-item").removeClass("_active")
    $(this).parents(".menu-item").addClass("_active")
})

function mainSlider() {
    var swiper = new Swiper('.main-slider .swiper-container', {
        slidesPerView: 1,
        spaceBetween: 10,
        loop: true,
        autoplay: {
            delay: 5000,
            disableOnInteraction: false,
            pauseOnMouseEnter: true,
        },
        navigation: {
            nextEl: '.main-slider .swiper-button-next',
            prevEl: '.main-slider .swiper-button-prev',
        },
        pagination: {
            el: '.main-slider .swiper-pagination',
            type: 'bullets',
            clickable: true,
        },
    })
}

function gallery() {
    var swiper = new Swiper(".gallery .mySwiper", {
        spaceBetween: 0,
        slidesPerView: "auto",
        freeMode: true,
        watchSlidesProgress: true,
        direction: "vertical",
        loop: true,
        scrollbar: {
            el: '.gallery .swiper-scrollbar',
            draggable: true,
            snapOnRelease: true,
            dragSize: 'auto',
        },
    });
    var swiper2 = new Swiper(".gallery .mySwiper2", {
        spaceBetween: 10,
        loop: true,
        navigation: {
            nextEl: '.gallery .swiper-button-next',
            prevEl: '.gallery .swiper-button-prev',
        },
        thumbs: {
            swiper: swiper,
        },
    });
}

mainSlider()
gallery()

$(".sort").each(function (i,el) {
    let toggle = $(el).find(".sort__show")
    let current = $(el).find(".sort__current")

    $(toggle).click(function () {
        $(el).toggleClass("_open")
    })

    setActiveOption()

    $(el).find(".sort__item").click(function () {
        $(el).find(".sort__item").removeClass("_active")
        $(this).addClass("_active")
        setActiveOption()
        $(el).removeClass("_open")
    })

    function setActiveOption() {
        $(current).html($(el).find(".sort__item._active").html())
    }

    $(document).mouseup( function(e){
        let div = $(el);
        if ( !div.is(e.target)
            && div.has(e.target).length === 0 ) {
            $(el).removeClass("_open")
        }
    });
})

let filterSliders = document.querySelectorAll(".filter-slider")

filterSliders.forEach(slider => {
    const rangeSlider = slider.querySelector(`.range-slider`)
    const rangeInput0 = slider.querySelector(`.range-slider__input1`)
    const rangeInput1 = slider.querySelector(`.range-slider__input2`)
    const rangeInputs = [rangeInput0, rangeInput1]

    let startValue1 = +slider.getAttribute("data-start")
    let startValue2 = +slider.getAttribute("data-start2")
    let min = +slider.getAttribute("data-min")
    let max = +slider.getAttribute("data-max")

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: [startValue1, startValue2],
            connect: true,
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });
    }
    if (rangeSlider) {
        rangeSlider.noUiSlider.on('update', function(values, handle) {
            rangeInputs[handle].value = Math.round(values[handle])
        })
        rangeInputs.forEach((el, index) => {
            el.addEventListener('change', (e) => {
                setRangeSlider(index, e.currentTarget.value)
            })
        })
    }
    const setRangeSlider = (i, value) => {
        let array = [null, null];
        array[i] = value;

        rangeSlider.noUiSlider.set(array);
    };
})

$(".filter-checks__more").click(function () {
    $(this).parents(".filter-checks").toggleClass("_open")
})

$("._open-gallery").click(function () {
    $(".gallery-modal").addClass("_active")
    $("body").addClass("fixed-body")
})

$("._close-gallery").click(function () {
    $(".gallery-modal").removeClass("_active")
    $("body").removeClass("fixed-body")
})

$(".info-card__show").click(function () {
    $(this).parents(".info-card").toggleClass("_active")
    $(this).siblings(".info-card__hidden").slideToggle()
})

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
